{"version":3,"sources":["./src/app/movie-card/movie-card.component.html","./src/app/movie-card/movie-card.component.ts","./src/environments/environment.ts","./src/app/user-registration-form/user-registration-form.component.ts","./src/app/user-registration-form/user-registration-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/welcome-page/welcome-page.component.ts","./src/app/welcome-page/welcome-page.component.html","./src/app/user-login-form/user-login-form.component.ts","./src/app/user-login-form/user-login-form.component.html","./src/app/fetch-api-data.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div style=\"display: flex;\">\r\n  <mat-card *ngFor=\"let movie of movies;\" style=\"flex: 1 1 auto;\">\r\n      <mat-card-header>\r\n      <mat-card-title>{{movie.Title}}</mat-card-title>\r\n          <mat-card-subtitle>Directed by: {{movie.Director.Name}}</mat-card-subtitle>\r\n      </mat-card-header>\r\n      <img src={{movie.ImagePath}} alt= {{movie.Title}} />\r\n      <mat-card-actions>\r\n          <button\r\n              mat-button\r\n              color=\"primary\"\r\n          >\r\n              Genre\r\n          </button>\r\n          <button\r\n              mat-button\r\n              color=\"primary\"\r\n          >\r\n              Director\r\n          </button>\r\n          <button\r\n              mat-button\r\n              color=\"primary\"\r\n          >\r\n              Synopsis\r\n          </button>\r\n          <mat-icon>favorite_border</mat-icon>\r\n      </mat-card-actions>\r\n  </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GetAllMoviesService } from '../fetch-api-data.service';\r\n\r\n@Component({\r\n  selector: 'app-movie-card',\r\n  templateUrl: './movie-card.component.html',\r\n  styleUrls: ['./movie-card.component.scss']\r\n})\r\nexport class MovieCardComponent {\r\n  movies: any[] = [];\r\n  constructor(public fetchApiData: GetAllMoviesService) { }\r\n\r\nngOnInit(): void {\r\n  this.getMovies();\r\n}\r\n\r\ngetMovies(): void {\r\n  this.fetchApiData.getAllMovies().subscribe((resp: any) => {\r\n      this.movies = resp;\r\n      console.log(this.movies);\r\n      return this.movies;\r\n    });\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n// You'll use this import to close the dialog on success\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n// This import is used to display notifications back to the user\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n//brings in the API calls \r\nimport { UserRegistrationService } from '../fetch-api-data.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-registration-form',\r\n  templateUrl: './user-registration-form.component.html',\r\n  styleUrls: ['./user-registration-form.component.scss']\r\n})\r\nexport class UserRegistrationFormComponent implements OnInit {\r\n\r\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\r\n  \r\n  constructor(\r\n    public fetchApiData: UserRegistrationService,\r\n    public dialogRef: MatDialogRef<UserRegistrationFormComponent>,\r\n    public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  // This is the function responsible for sending the form inputs to the backend\r\n  registerUser(): void {\r\n    this.fetchApiData.userRegistration(this.userData).subscribe((result) => {\r\n  // Logic for a successful user registration goes here! (To be implemented)\r\n    this.dialogRef.close(); // This will close the modal on success!\r\n      this.snackBar.open(result, 'OK', {\r\n        duration: 2000\r\n      });\r\n    }, (result) => {\r\n      this.snackBar.open(result, 'OK', {\r\n        duration: 2000\r\n      });\r\n    });\r\n  }\r\n}","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Sign Up!</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form>\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          [(ngModel)]=\"userData.Username\"\r\n          placeholder=\"Username\"\r\n          type=\"text\"\r\n          name=\"Username\"\r\n          required\r\n        >\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n        <input\r\n          matInput\r\n          [(ngModel)]=\"userData.Password\"\r\n          type = \"password\"\r\n          placeholder=\"Password\"\r\n          name=\"Password\"\r\n          required\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          [(ngModel)]=\"userData.Email\"\r\n          type = \"email\"\r\n          placeholder=\"Email\"\r\n          name=\"Email\"\r\n          required\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          [(ngModel)]=\"userData.Birthday\"\r\n          type = \"date\"\r\n          placeholder=\"Birthday\"  \r\n          name=\"Birthday\"\r\n        >\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n      <button\r\n        mat-raised-button\r\n        (click)=\"registerUser()\"\r\n        color=\"primary\"\r\n      >\r\n        Sign Up\r\n      </button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'filmFlix';\r\n}","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\n\r\n// HttpClient and routing\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n// Angular Material\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n// App Components\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\r\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\r\nimport { MovieCardComponent } from './movie-card/movie-card.component';\r\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'welcome', component: WelcomePageComponent },\r\n  { path: 'movies', component: MovieCardComponent },\r\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserRegistrationFormComponent,\r\n    UserLoginFormComponent,\r\n    MovieCardComponent,\r\n    WelcomePageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule, \r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    FormsModule,\r\n    RouterModule.forRoot(appRoutes),\r\n    MatIconModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\r\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-welcome-page',\r\n  templateUrl: './welcome-page.component.html',\r\n  styleUrls: ['./welcome-page.component.scss']\r\n})\r\nexport class WelcomePageComponent implements OnInit {\r\n  constructor(public dialog: MatDialog) { }\r\n  ngOnInit(): void {\r\n  }\r\n  // registration dialog\r\n  openUserRegistrationDialog(): void {\r\n    this.dialog.open(UserRegistrationFormComponent, {\r\n      width: '280px'\r\n    });\r\n  }\r\n  // login dialog\r\n  openUserLoginDialog(): void {\r\n    this.dialog.open(UserLoginFormComponent, {\r\n      width: '280px'\r\n    });\r\n  }\r\n}","<div class=\"welcome-container\">\r\n  <div class=\"welcome-title\">\r\n    <h1>\r\n      Welcome to filmFlix\r\n    </h1>\r\n  </div>\r\n  <div class=\"btn-container\">\r\n    <button\r\n      mat-raised-button\r\n      (click)=\"openUserRegistrationDialog()\"\r\n      color=\"primary\"\r\n      aria-label=\"Sign up button\"\r\n    >\r\n      Sign Up\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      (click)=\"openUserLoginDialog()\"\r\n      color=\"accent\"\r\n      aria-label=\"Login button\"\r\n    >\r\n      Login\r\n    </button>\r\n  </div>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { UserLoginService } from '../fetch-api-data.service';\r\n\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-login-form',\r\n  templateUrl: './user-login-form.component.html',\r\n  styleUrls: ['./user-login-form.component.scss']\r\n})\r\nexport class UserLoginFormComponent implements OnInit {\r\n\r\n  @Input() userData ={ Username: '', Password: ''};\r\n\r\n  constructor(\r\n    public fetchApiData: UserLoginService,\r\n    public dialogRef: MatDialogRef<UserLoginFormComponent>,\r\n    public snackBar: MatSnackBar,\r\n    public router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  /**\r\n   * function to login user\r\n   */\r\n  loginUser(): void {\r\n    this.fetchApiData.userLogin(this.userData).subscribe((response) => {\r\n      this.dialogRef.close();\r\n      localStorage.setItem('user', response.user.Username);\r\n      localStorage.setItem('token', response.token);\r\n      this.snackBar.open('User logged in successfully!', 'OK', {\r\n        duration: 2000\r\n      });\r\n      this.router.navigate(['movies']);\r\n    }, (response) => {\r\n      console.log(response);\r\n      this.snackBar.open(response, 'OK', {\r\n        duration: 2000\r\n      });\r\n    });\r\n  }\r\n}","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Login</mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form>\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          [(ngModel)]=\"userData.Username\"\r\n          placeholder=\"Username\"\r\n          type=\"text\"\r\n          name=\"Username\"\r\n          required\r\n        >\r\n      </mat-form-field>\r\n      <mat-form-field>\r\n        <input\r\n          matInput\r\n          [(ngModel)]=\"userData.Password\"\r\n          placeholder=\"Password\"\r\n          type=\"password\"\r\n          name=\"Password\"\r\n          required\r\n        >\r\n      </mat-form-field>\r\n      </form>\r\n  </mat-card-content>\r\n  <mat-card-actions>\r\n    <button\r\n      mat-raised-button\r\n      (click)=\"loginUser()\"\r\n      color=\"primary\"\r\n    >Login</button>\r\n  </mat-card-actions>\r\n</mat-card>","import { Injectable } from '@angular/core';\r\nimport { catchError } from 'rxjs/internal/operators';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n//Declaring the api url that will provide data for the client app\r\nconst apiUrl = 'https://myflix-zag.herokuapp.com/';\r\n\r\n// User registration\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserRegistrationService {\r\n  // Inject the HttpClient module to the constructor params\r\n // This will provide HttpClient to the entire class, making it available via this.http\r\n  constructor(private http: HttpClient) {\r\n  }\r\n // Making the api call for the user registration endpoint\r\n  public userRegistration(userDetails: any): Observable<any> {\r\n    console.log(userDetails);\r\n    return this.http.post(apiUrl + 'users', userDetails).pipe(\r\n    catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// User login\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserLoginService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //Making the api call for the user login endpoint\r\n  public userLogin(userDetails: any): Observable<any> {\r\n    console.log(userDetails);\r\n    return this.http\r\n      .post(apiUrl + 'login', userDetails)\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\r\n      );\r\n    }\r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n//Get all movies\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetAllMoviesService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //Making the api call to get all movies\r\n  getAllMovies(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'movies', {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\r\n      );\r\n    }\r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Get one movie\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetSingleMovieService {\r\n  constructor(private http: HttpClient) { }\r\n  \r\n//Making the api call for single movie information\r\n  getMovieByTitle(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'movies/:Title', {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n      console.error(\r\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\r\n      );\r\n    }\r\n    return throwError('Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Get director\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetDirectorService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n//Making the api call to get director information\r\n  getDirector(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'movies/directors/:Name', {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Get genre\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetGenreService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n//Making the api call to get genre information\r\n  getGenre(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    return this.http.get(apiUrl + 'movies/genres/:Name', {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Get user\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetUserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n//Making the api call to get user information\r\n  getUser(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user')\r\n    return this.http.get(apiUrl + `users/${user}`, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Get favourite movies for a user\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GetFavoriteMoviesService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n//Making the api call to get user's favorite movies\r\n  getUserFavorite(id: string): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    return this.http.get(apiUrl + `users/${user}/Movies/${id}`, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Add a movie to favourite movies\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AddFavoriteMovieService {\r\n  constructor(private http: HttpClient) { }\r\n  \r\n//Making the api call for user to add favorite movie\r\n  addFavoriteMovie(id: string): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    return this.http.post(apiUrl + `users/${user}/Movies/${id}`, id, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Edit user\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EditUserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n//Making the api call to edit user information\r\n  editUser(userDetails: any): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    return this.http.put(apiUrl + `users/${user}`, userDetails, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Delete user\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DeleteUserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n//Making the api call to delete user information\r\n  deleteUser(): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    return this.http.delete(apiUrl + `users/${user}`, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\n// Delete a movie from the favorite movies\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RemoveFavoriteMovieService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n//Making the api call to delete movie from user's favorites\r\n  deleteFavoriteMovie(id: string): Observable<any> {\r\n    const token = localStorage.getItem('token');\r\n    const user = localStorage.getItem('user');\r\n    return this.http.delete(apiUrl + `users/${user}/Movies/${id}`, {headers: new HttpHeaders(\r\n      {\r\n        Authorization: 'Bearer ' + token,\r\n      })\r\n    }).pipe(\r\n      map(this.extractResponseData),\r\n      catchError(this.handleError)\r\n    );\r\n  }\r\n\r\n  // Non-typed response extraction\r\n  private extractResponseData(res: Response | Object): any {\r\n    const body = res;\r\n    return body || { };\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n    console.error('Some error occurred:', error.error.message);\r\n    } else {\r\n    console.error(\r\n        `Error Status code ${error.status}, ` +\r\n        `Error body is: ${error.error}`);\r\n    }\r\n    return throwError(\r\n    'Something bad happened; please try again later.');\r\n  }\r\n}\r\n\r\nexport class FetchApiDataService {\r\n  constructor() {}\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}